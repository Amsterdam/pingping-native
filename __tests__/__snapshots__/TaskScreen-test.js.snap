// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "#0d2036",
          }
        }
      >
        <View
          noShadow={true}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "transparent",
                "borderBottomWidth": 0.5,
                "elevation": 0,
                "flexDirection": "row",
                "height": 64,
                "justifyContent": "center",
                "left": 0,
                "paddingLeft": 6,
                "paddingRight": 10,
                "paddingTop": undefined,
                "right": 0,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
                "top": 0,
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              Object {
                "backgroundColor": "#0d2036",
              },
            ]
          }
          transparent={true}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                  "alignSelf": "center",
                  "flex": 1,
                },
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              forwardedRef={[Function]}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": null,
                  "backgroundColor": "transparent",
                  "borderBottomWidth": null,
                  "borderColor": null,
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "borderWidth": undefined,
                  "elevation": 0,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "space-between",
                  "marginLeft": -3,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingLeft": 4,
                  "paddingRight": 6,
                  "paddingTop": 6,
                  "shadowColor": null,
                  "shadowOffset": null,
                  "shadowOpacity": null,
                  "shadowRadius": null,
                }
              }
              testID="HEADER_BACK_BUTTON"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 30,
                      },
                      Object {
                        "color": "#007aff",
                        "fontSize": 34,
                        "marginLeft": 1,
                        "marginRight": 2,
                        "marginTop": 0,
                        "paddingTop": 1,
                      },
                      Object {
                        "color": "#fff",
                      },
                    ],
                    Object {
                      "fontFamily": "anticon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                type="AntDesign"
              >
                î˜œ
              </Text>
            </View>
          </View>
          <Text
            ellipsizeMode="tail"
            numberOfLines={0}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "fontFamily": "Heavitas",
                },
                Object {
                  "fontSize": 26,
                },
                Object {
                  "textAlign": "left",
                },
                Object {
                  "color": "#fff",
                  "marginTop": 5,
                },
              ]
            }
          >
            
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "alignSelf": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                },
                Object {
                  "flex": 1,
                },
              ]
            }
          />
        </View>
      </RCTSafeAreaView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "width": "100%",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "flex": 1,
              "padding": 25,
              "position": "relative",
              "width": 750,
            }
          }
        >
          <Text
            ellipsizeMode="tail"
            numberOfLines={0}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "fontFamily": "Heavitas",
                },
                Object {
                  "fontSize": 44,
                },
                Object {
                  "textAlign": "left",
                },
                Object {},
              ]
            }
          >
            A title
          </Text>
          <View
            style={Object {}}
          >
            <Text
              allowFontScaling={true}
              selectable={false}
              style={
                Array [
                  Object {},
                  Object {},
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Object {
                    "fontFamily": "Raleway-Regular",
                    "fontSize": 27,
                    "lineHeight": 46,
                  }
                }
              >
                a description
              </Text>
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 20,
          "marginTop": 10,
          "paddingHorizontal": 40,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#b9b9b9",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 10,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flex": 1,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "marginRight": 10,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
        testID=""
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#fff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                Object {
                  "color": "#fff",
                  "fontFamily": "Heavitas",
                  "fontSize": 26,
                  "paddingTop": 3,
                },
                Object {},
              ]
            }
          >
            Hulp nodig?
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#fb9f00",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 10,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
        testID=""
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#fff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                },
                Object {
                  "color": "#fff",
                  "fontFamily": "Heavitas",
                  "fontSize": 26,
                  "paddingTop": 3,
                },
                Object {},
              ]
            }
          >
            Gelukt!
          </Text>
        </View>
      </View>
    </View>
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    >
      <View
        style={
          Object {
            "backgroundColor": "rgba(1,1,1,0.8)",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderTopLeftRadius": 35,
              "borderTopRightRadius": 35,
              "flex": 1,
              "marginTop": 75,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fb9f00",
                "borderTopLeftRadius": 35,
                "borderTopRightRadius": 35,
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              ellipsizeMode="tail"
              numberOfLines={0}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Heavitas",
                  },
                  Object {
                    "fontSize": 58,
                  },
                  Object {
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#fff",
                    "marginTop": 10,
                  },
                ]
              }
            >
              SLUITEN
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "padding": 5,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  undefined,
                ]
              }
            >
              <RNCWebView
                cacheEnabled={true}
                injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                injectedJavaScriptForMainFrameOnly={true}
                javaScriptEnabled={true}
                messagingEnabled={false}
                onContentProcessDidTerminate={[Function]}
                onHttpError={[Function]}
                onLoadingError={[Function]}
                onLoadingFinish={[Function]}
                onLoadingProgress={[Function]}
                onLoadingStart={[Function]}
                onMessage={[Function]}
                onNavigationStateChange={[Function]}
                onShouldStartLoadWithRequest={[Function]}
                source={
                  Object {
                    "uri": "https://amsterdam.nl",
                  }
                }
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    undefined,
                  ]
                }
                useSharedProcessPool={true}
              />
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0.4)",
            "flex": 1,
            "justifyContent": "flex-end",
            "opacity": 1,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fff",
              "elevation": 4,
              "maxHeight": 667,
              "minHeight": 56,
              "opacity": 1,
              "padding": 15,
            }
          }
        >
          <RCTScrollView
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "marginHorizontal": -15,
                },
                Object {
                  "marginTop": 0,
                },
              ]
            }
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
