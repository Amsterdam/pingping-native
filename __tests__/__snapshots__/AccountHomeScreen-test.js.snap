// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "#0d2036",
        }
      }
    >
      <View
        noShadow={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomWidth": 0.5,
              "elevation": 0,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 6,
              "paddingRight": 10,
              "paddingTop": 18,
              "right": 0,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
              "top": 0,
            },
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d2036",
              "flexDirection": "column",
              "justifyContent": "center",
              "margin": 15,
            },
          ]
        }
        transparent={true}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "#fff",
                "fontFamily": "Heavitas",
                "fontSize": 14,
                "textAlign": "left",
              },
            ]
          }
          uppercase={false}
        >
          Gegevens
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#f7fbff",
        "flex": 1,
        "justifyContent": "center",
        "padding": 30,
        "position": "relative",
        "width": 750,
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "image": Object {
              "testUri": "../../../src/assets/export.png",
            },
            "route": "ExportData",
            "title": "Exporteer gegevens",
          },
          Object {
            "image": Object {
              "testUri": "../../../src/assets/warning.png",
            },
            "route": "ViewPrivacy",
            "title": "Privacy",
          },
          Object {
            "image": Object {
              "testUri": "../../../src/assets/trashcan.png",
            },
            "route": "DeleteData",
            "title": "Verwijder gegevens",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "elevation": 1,
                  "justifyContent": "center",
                  "margin": 8,
                  "opacity": 1,
                  "padding": 20,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": 325,
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/assets/export.png",
                  }
                }
                style={
                  Object {
                    "marginBottom": 20,
                    "maxHeight": 40,
                    "maxWidth": 40,
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Object {
                      "fontFamily": "Heavitas",
                      "fontSize": 14,
                      "textAlign": "center",
                    },
                  ]
                }
                uppercase={false}
              >
                Exporteer gegevens
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "elevation": 1,
                  "justifyContent": "center",
                  "margin": 8,
                  "opacity": 1,
                  "padding": 20,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": 325,
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/assets/warning.png",
                  }
                }
                style={
                  Object {
                    "marginBottom": 20,
                    "maxHeight": 40,
                    "maxWidth": 40,
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Object {
                      "fontFamily": "Heavitas",
                      "fontSize": 14,
                      "textAlign": "center",
                    },
                  ]
                }
                uppercase={false}
              >
                Privacy
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 10,
                  "elevation": 1,
                  "justifyContent": "center",
                  "margin": 8,
                  "opacity": 1,
                  "padding": 20,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                  "width": 325,
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/assets/trashcan.png",
                  }
                }
                style={
                  Object {
                    "marginBottom": 20,
                    "maxHeight": 40,
                    "maxWidth": 40,
                  }
                }
              />
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Object {
                      "fontFamily": "Heavitas",
                      "fontSize": 14,
                      "textAlign": "center",
                    },
                  ]
                }
                uppercase={false}
              >
                Verwijder gegevens
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
