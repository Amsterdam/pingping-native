// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        noShadow={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomWidth": 0.5,
              "elevation": 0,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 6,
              "paddingRight": 10,
              "paddingTop": 18,
              "right": 0,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
              "top": 0,
            },
            Object {
              "alignItems": "center",
            },
          ]
        }
        transparent={true}
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "center",
              "flex": 1,
            }
          }
        />
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "#fb9f00",
                "fontFamily": "Heavitas",
                "fontSize": 14,
                "textAlign": "left",
              },
            ]
          }
          uppercase={false}
        >
          PRIVACY
        </Text>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-end",
            }
          }
        >
          <View>
            <View
              animated={true}
              animationConfig={
                Object {
                  "bounciness": 0,
                }
              }
              animationType="spring"
              indeterminate={false}
              indeterminateAnimationDuration={1000}
              onLayout={[Function]}
              progress={0.1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e9e9e9",
                    "borderColor": "#2dbcca",
                    "borderRadius": 4,
                    "borderWidth": 0,
                    "overflow": "hidden",
                    "width": 50,
                  },
                  undefined,
                ]
              }
              useNativeDriver={false}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#2dbcca",
                    "height": 10,
                    "transform": Array [
                      Object {
                        "translateX": -1.7763568394002505e-15,
                      },
                      Object {
                        "translateX": -22.5,
                      },
                      Object {
                        "scaleX": 0.10009000000000001,
                      },
                    ],
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Array [
          Object {
            "padding": undefined,
          },
          Object {
            "flex": 1,
            "padding": 20,
          },
        ]
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View />
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
