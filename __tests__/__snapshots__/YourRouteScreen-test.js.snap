// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    style={
      Object {
        "bottom": 600,
        "left": undefined,
        "position": "absolute",
        "right": 300,
        "top": undefined,
        "zIndex": 0,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={328}
      bbWidth={328}
      focusable={false}
      height={328}
      meetOrSlice={0}
      minX={39}
      minY={39}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 328,
            "width": 328,
          },
        ]
      }
      vbHeight={328}
      vbWidth={328}
      width={328}
    >
      <RNSVGGroup>
        <RNSVGCircle
          cx={203}
          cy={203}
          fill={null}
          opacity={0.401}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          r={149}
          stroke={4281187530}
          strokeWidth={30}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      Object {
        "bottom": undefined,
        "left": 350,
        "position": "absolute",
        "right": undefined,
        "top": 400,
        "zIndex": 0,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={328}
      bbWidth={328}
      focusable={false}
      height={328}
      meetOrSlice={0}
      minX={39}
      minY={39}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 328,
            "width": 328,
          },
        ]
      }
      vbHeight={328}
      vbWidth={328}
      width={328}
    >
      <RNSVGGroup>
        <RNSVGCircle
          cx={203}
          cy={203}
          fill={null}
          opacity={0.401}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          r={149}
          stroke={4294526287}
          strokeWidth={30}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        noShadow={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomWidth": 0.5,
              "elevation": 0,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 6,
              "paddingRight": 10,
              "paddingTop": 18,
              "right": 0,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
              "top": 0,
            },
            Object {
              "alignItems": "flex-start",
              "backgroundColor": "transparent",
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "marginBottom": 30,
            },
          ]
        }
        transparent={true}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={true}
            forwardedRef={[Function]}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": "#007aff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "borderWidth": undefined,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 30,
                    },
                    Object {
                      "color": "#007aff",
                      "fontSize": 24,
                      "marginLeft": 16,
                      "marginRight": 16,
                      "paddingTop": 2,
                    },
                    Object {
                      "color": "#000",
                      "fontSize": 32,
                    },
                  ],
                  Object {
                    "fontFamily": "anticon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              type="AntDesign"
            >
              î˜œ
            </Text>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "fontFamily": "Heavitas",
                "fontSize": 30,
                "marginTop": 20,
                "paddingLeft": 20,
                "textAlign": "left",
              },
            ]
          }
          uppercase={false}
        >
          Je Route!
        </Text>
      </View>
    </RCTSafeAreaView>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "padding": 30,
        "paddingBottom": 0,
        "position": "relative",
        "width": 750,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            undefined,
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "backgroundColor": "#2dbcca",
                  "borderRadius": 5,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#fff",
                    "fontFamily": "Heavitas",
                    "fontSize": 30,
                    "padding": 20,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Fiks de basis
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 125,
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "marginTop": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#bfe9ee",
                    "flex": 1,
                    "height": 10,
                    "width": 10,
                  }
                }
              />
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f9454f",
                    "borderRadius": 100,
                    "height": 40,
                    "justifyContent": "center",
                    "width": 40,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#000",
                          "fontSize": 30,
                        },
                        Object {
                          "color": "#000",
                          "fontSize": 30,
                        },
                        Object {
                          "color": "#fff",
                          "fontSize": 20,
                        },
                      ],
                      Object {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  type="Entypo"
                >
                  ï‡´
                </Text>
              </View>
              <View
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "borderRadius": 100,
                    "flex": 1,
                    "height": 10,
                  }
                }
              />
            </View>
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "width": 300,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                    },
                    Object {
                      "fontFamily": "Heavitas",
                      "fontSize": 20,
                      "marginLeft": 10,
                      "textAlign": "left",
                    },
                  ]
                }
                uppercase={false}
              >
                100 City Pings !
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </RCTSafeAreaView>
  </View>
</View>
`;
