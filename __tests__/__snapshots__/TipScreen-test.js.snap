// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    style={
      Object {
        "bottom": 600,
        "left": undefined,
        "position": "absolute",
        "right": 300,
        "top": undefined,
        "zIndex": undefined,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={328}
      bbWidth={328}
      focusable={false}
      height={328}
      meetOrSlice={0}
      minX={39}
      minY={39}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 328,
            "width": 328,
          },
        ]
      }
      vbHeight={328}
      vbWidth={328}
      width={328}
    >
      <RNSVGGroup>
        <RNSVGCircle
          cx={203}
          cy={203}
          fill={null}
          opacity={0.401}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          r={149}
          stroke={4281187530}
          strokeWidth={30}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      Object {
        "bottom": undefined,
        "left": 350,
        "position": "absolute",
        "right": undefined,
        "top": 400,
        "zIndex": undefined,
      }
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={328}
      bbWidth={328}
      focusable={false}
      height={328}
      meetOrSlice={0}
      minX={39}
      minY={39}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 328,
            "width": 328,
          },
        ]
      }
      vbHeight={328}
      vbWidth={328}
      width={328}
    >
      <RNSVGGroup>
        <RNSVGCircle
          cx={203}
          cy={203}
          fill={null}
          opacity={0.401}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          r={149}
          stroke={4294526287}
          strokeWidth={30}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "#fff",
        }
      }
    >
      <View
        noShadow={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomWidth": 0.5,
              "elevation": 0,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 6,
              "paddingRight": 10,
              "paddingTop": 18,
              "right": 0,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
              "top": 0,
            },
            Object {
              "alignItems": "flex-start",
              "backgroundColor": "#fff",
              "justifyContent": "flex-start",
            },
          ]
        }
        transparent={true}
      >
        <View
          accessible={true}
          focusable={true}
          forwardedRef={[Function]}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": null,
              "borderColor": "#007aff",
              "borderLeftWidth": null,
              "borderRadius": 5,
              "borderRightWidth": null,
              "borderTopWidth": null,
              "borderWidth": undefined,
              "elevation": 0,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "center",
              "opacity": 1,
              "paddingBottom": 6,
              "paddingLeft": 6,
              "paddingRight": 6,
              "paddingTop": 6,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 30,
                  },
                  Object {
                    "color": "#007aff",
                    "fontSize": 24,
                    "marginLeft": 16,
                    "marginRight": 16,
                    "paddingTop": 2,
                  },
                  Object {
                    "color": "#000",
                  },
                ],
                Object {
                  "fontFamily": "anticon",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            type="AntDesign"
          >
            î˜œ
          </Text>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "padding": 30,
        "position": "relative",
        "width": 750,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            undefined,
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "fontFamily": "Heavitas",
                  "fontSize": 30,
                  "marginBottom": 25,
                  "textAlign": "left",
                },
              ]
            }
            uppercase={false}
          >
            Tips
          </Text>
          <View
            style={
              Object {
                "marginBottom": 25,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Heavitas",
                    "fontSize": 18,
                    "marginBottom": 10,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Hoeveel abonnementen heb jij?
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Raleway",
                    "fontSize": 15,
                    "lineHeight": 25,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Automatische afschrijvingen kunnen handig zijn, maar ook gevaarlijk! Als je niet gebruik maakt van abonnementen zoals de sportschool, swapfiets of zoiets, stop dan je abonnement. Zo loopt het niet door en bespaar je geld.
            </Text>
          </View>
          <View
            style={
              Object {
                "marginBottom": 25,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Heavitas",
                    "fontSize": 18,
                    "marginBottom": 10,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Zet je eigen goal om te sparen!
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Raleway",
                    "fontSize": 15,
                    "lineHeight": 25,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Een handige manier om te sparen; de 52 weken challenge! Spaar in de eerste week 1euro en spaar vervolgens elke week een euro meer. Hou je dit 52 weken vol dan heb je op een makkelijke manier 1378 euro gespaard in een jaar!
            </Text>
          </View>
          <View
            style={
              Object {
                "marginBottom": 25,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Heavitas",
                    "fontSize": 18,
                    "marginBottom": 10,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Spaar je eigen risico
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                  },
                  Object {
                    "fontFamily": "Raleway",
                    "fontSize": 15,
                    "lineHeight": 25,
                    "textAlign": "left",
                  },
                ]
              }
              uppercase={false}
            >
              Ga bij je Zorgverzekeraar na of je je eigen risico verspreid over het jaar kunt betalen. Moet je gebruik maken van je verzekering omdat je ziektekosten hebt, dan sta je niet voor verassingen. Maak je geen gebruik van ziektekosten dan kun je je betaalde eigen risico over dat jaar terugkrijgen! Een fijn spaarpotje!
            </Text>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "fontFamily": "Raleway",
                  "fontSize": 15,
                  "lineHeight": 25,
                  "textAlign": "left",
                },
              ]
            }
            uppercase={false}
          >
            Kom je er niet uit? Vraag om hulp in de!
          </Text>
        </View>
      </RCTScrollView>
    </RCTSafeAreaView>
  </View>
</View>
`;
