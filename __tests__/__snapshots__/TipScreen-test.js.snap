// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
        }
      }
    >
      <View
        noShadow={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "transparent",
              "borderBottomWidth": 0.5,
              "elevation": 0,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 6,
              "paddingRight": 10,
              "paddingTop": 18,
              "right": 0,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
              "top": 0,
            },
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            false,
          ]
        }
        transparent={true}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-start",
                "alignSelf": "center",
                "flex": 1,
              },
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            forwardedRef={[Function]}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": null,
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": null,
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "borderWidth": undefined,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "marginLeft": -3,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 4,
                "paddingRight": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID="Header-Back-Button"
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 30,
                    },
                    Object {
                      "color": "#007aff",
                      "fontSize": 34,
                      "marginLeft": 1,
                      "marginRight": 2,
                      "marginTop": 0,
                      "paddingTop": 1,
                    },
                    Object {
                      "color": "#000",
                    },
                  ],
                  Object {
                    "fontFamily": "anticon",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              type="AntDesign"
            >
              î˜œ
            </Text>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "fontFamily": "Heavitas",
                "fontSize": 30,
                "textAlign": "left",
              },
              Object {
                "color": "#fb9f00",
                "fontSize": 14,
                "marginTop": 5,
              },
            ]
          }
          uppercase={false}
        >
          Tips
        </Text>
        <View
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "alignSelf": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "flex-end",
              },
              Object {
                "flex": 1,
              },
            ]
          }
        />
      </View>
    </RCTSafeAreaView>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "padding": 25,
        "position": "relative",
        "width": 750,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            undefined,
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View />
      </RCTScrollView>
    </RCTSafeAreaView>
  </View>
</View>
`;
